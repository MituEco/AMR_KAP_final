#Demographic characteristics of study participants
# load packages
library(tidyverse)
library(gtsummary)
library(gt)
library(easystats)
# read data
data <- readxl::read_excel("rawdata/AMR_KAP_Data.xlsx", sheet = 1)
# Demographic characteristics of study participants
data |>
select(1:11)
# Demographic characteristics of study participants
data |>
select(1:11) |>
tbl_summary()
# Demographic characteristics of study participants
data |>
select(1:11) |>
tbl_summary() |>
as_gt()
# Demographic characteristics of study participants
data |>
select(1:11) |>
tbl_summary() |>
as_gt() |>
gtsave("tables/Table1_Demographics.docx")
data |>
select(40:49) |>
tbl_summary()
data |>
select(40:49) |>
tbl_summary()
data |>
select(40:49)
# load packages
library(tidyverse)
library(gtsummary)
library(gt)
library(easystats)
# read data
data <- readxl::read_excel("rawdata/AMR_KAP_Data.xlsx", sheet = 1)
data |>
select(40:49)
data |>
select(40:49) |>
tbl_summary()
data |>
select(40:49) |>
tbl_summary() >
as_gt()
data |>
select(40:49) |>
tbl_summary() >
as_gt() |>
gtsave("tables/Table2_information.docx")
data |>
select(40:49) |>
tbl_summary() >
as_gt() |>
gtsave("tables/Table2_information.docx")
# read data
data <- readxl::read_excel("rawdata/AMR_KAP_Data.xlsx", sheet = 1)
data |>
select(40:49) |>
tbl_summary() >
as_gt() |>
gtsave("tables/Table2_information.docx")
data |>
select(40:49)
data |>
select(40:49)  |>
tbl_summary()
data |>
select(40:49)  |>
tbl_summary() |>
as_gt()
data |>
select(40:49)  |>
tbl_summary() |>
as_gt() |>
gtsave("tables/Table1_Demographics.docx")
data |>
select(40:49)  |>
tbl_summary() |>
as_gt() |>
gtsave("tables/Table2_information.docx")
# Demographic characteristics of study participants
data |>
select(1:11) |>
tbl_summary() |>
as_gt() |>
gtsave("tables/Table1_Demographics.docx")
# read data
data <- readxl::read_excel("rawdata/AMR_KAP_Data.xlsx", sheet = 1)
# Demographic characteristics of study participants
data |>
select(1:11) |>
tbl_summary() |>
as_gt() |>
gtsave("tables/Table1_Demographics.docx")
# load packages
library(tidyverse)
library(gtsummary)
library(gt)
library(easystats)
data <- readxl::read_excel("rawdata/AMR_KAP_Data.xlsx", sheet = 3)
# Create knowledge level based on total knowledge score
data <- data |>
mutate(knowledge_level = case_when(
Total_knowledge_score <= 3 ~ "Poor",
Total_knowledge_score > 3 & Total_knowledge_score <= 7 ~ "Moderate",
Total_knowledge_score > 7 ~ "Good"
))
# Create knowledge level based on total knowledge score
data <- data |>
mutate(knowledge_level = case_when(
'Total knowledge score' <= 3 ~ "Poor",
'Total knowledge score' > 3 & 'Total knowledge score' <= 7 ~ "Moderate",
'Total knowledge score' > 7 ~ "Good"
))
View(data)
# Create knowledge level based on total knowledge score
data <- data |>
mutate(knowledge_level = case_when(
`Total knowledge score` <= 3 ~ "Poor",
`Total knowledge score` > 3 & `Total knowledge score` <= 7 ~ "Moderate",
`Total knowledge score` > 7 ~ "Good"
))
colnames(data)
data <- data |>
mutate(attitude_level = case_when(
`total score of attitude` <= 3 ~ "negative",
`total score of attitude` > 3 & `total score of attitude` <= 7 ~ "uncertain",
`total score of attitude` > 7 ~ "positive"
))
data <- data %>%
mutate(
practice_level = case_when(
`total score of practice` < 4 ~ "Poor",
`total score of practice` >= 4 ~ "Good"
)
)
#
data |>
select(46:48)
#
data |>
select(47:49)
#
data |>
select(47:49) |>
tbl_summary()
#
data |>
select(47:49) |>
tbl_summary() |>
as_gt()
#
data |>
select(47:49) |>
tbl_summary() |>
as_gt() |>
gtsave("tables/Table3_level.docx")
# load packages
library(tidyverse)
library(gtsummary)
library(gt)
library(easystats)
library(report)
library(writexl)
library(MASS)
library(dplyr)
data <- readxl::read_excel("rawdata/AMR_KAP_Data.xlsx", sheet = 3)
#Factors associated with level of knowledge
data <- data |>
mutate(knowledge_level = case_when(
`Total knowledge score` <5 ~ "Poor",
`Total knowledge score` >= 5 ~ "Good"
)
)
View(data)
# Ensure knowledge_level is a factor with ordered levels
data$knowledge_level <- factor(data$knowledge_level,
levels = c("Poor", "Good"),
ordered = TRUE)
## Fit a logistic regression model using glm
glm_model <- glm(knowledge_level ~ `Parentâ€™s age (years)` + `Parentâ€™s sex` +
`Parentâ€™s education level` + `Employment status` + `Family type` +
`Your average household income per month (BDT)` + `Childâ€™s sex` +
`Childâ€™s age (years)` + `Number of children`,
family = binomial(link = "logit"), data = data)
glm_model <- glm(knowledge_level ~ `Parent’s age (years)` + `Parent’s sex` +
`Parent’s education level` + `Employment status` + `Family type` +
`Your average household income per month (BDT)` + `Child’s sex` +
`Child’s age (years)` + `Number of children`,
family = binomial(link = "logit"), data = data)
summary(glm_model)
report(glm_model)
# tbl_regression
glm_model |>
tbl_regression(exponentiate = T)
bold_p(t = 0.05)
# tbl_regression
glm_model |>
tbl_regression(exponentiate = T) |>
bold_p(t = 0.05)
# tbl_regression
glm_model |>
tbl_regression(exponentiate = T) |>
bold_p(t = 0.05) |>
as_gt()
# tbl_regression
glm_model |>
tbl_regression(exponentiate = T) |>
bold_p(t = 0.05) |>
as_gt() |>
gtsave("tables/Table4_LogReg.docx")
# load packages
library(tidyverse)
library(gtsummary)
library(gt)
library(easystats)
library(dplyr)
library(MASS)
data <- readxl::read_excel("rawdata/AMR_KAP_Data.xlsx", sheet = 3)
View(data)
colnames(data)
#associated with the level of attitudes
data <- data |>
mutate(attitude_level = case_when(
`total score of practice` < 5 ~ "negative",
`total score of practice` >= 5 ~ "positive"
))
# Ensure _level is a factor with ordered levels
data$attitude_level <- factor(data$attitude_level,
levels = c("negative", "positive"),
ordered = TRUE)
# Check for missing values in the data
summary(data)
glm_model <- glm(attitude_level ~ `Parent’s age (years)` + `Parent’s sex` +
`Parent’s education level` + `Employment status` + `Family type` +
`Your average household income per month (BDT)` + `Child’s sex` +
`Child’s age (years)` + `Number of children`,
family = binomial(link = "logit"), data = data)
summary(glm_model)
report(glm_model)
# tbl_regression
glm_model |>
tbl_regression(exponentiate = T)
# tbl_regression
glm_model |>
tbl_regression(exponentiate = T) |>
bold_p(t = 0.05)
# tbl_regression
glm_model |>
tbl_regression(exponentiate = T)
# tbl_regression
glm_model |>
tbl_regression(exponentiate = T) |>
bold_p(t = 0.05)
# tbl_regression
glm_model |>
tbl_regression(exponentiate = T) |>
bold_p(t = 0.05) |>
gtsave("tables/Table5_attitude.docx")
glm_model |>
tbl_regression(exponentiate = TRUE)
glm_model |>
tbl_regression(exponentiate = TRUE) |>
bold_p(t = 0.05)
glm_model |>
tbl_regression(exponentiate = TRUE) |>
bold_p(t = 0.05) |>
as_gt()
glm_model |>
tbl_regression(exponentiate = TRUE) |>
bold_p(t = 0.05) |>
as_gt() |>
gtsave("tables/Table5_attitude.docx")
# tbl_regression
glm_model |>
tbl_regression(exponentiate = T) |>
bold_p(t = 0.05) |>
gtsave("tables/Table4_information.docx")
# load packages
library(tidyverse)
library(gtsummary)
library(gt)
library(easystats)
library(report)
library(MASS)
data <- readxl::read_excel("rawdata/AMR_KAP_Data.xlsx", sheet = 3)
#Create knowledge level based on Total knowledge score
data <- data |>
mutate(knowledge_level = case_when(
`Total knowledge score` <= 3 ~ "Poor",
`Total knowledge score` > 3 & `Total knowledge score` <= 7 ~ "Moderate",
`Total knowledge score` > 7 ~ "Good"
))
View(data)
# Create attitude level based on total attitude score
data <- data |>
mutate(attitude_level = case_when(
`total score of attitude` <= 3 ~ "negative",
`total score of attitude` > 3 & `total score of attitude` <= 7 ~ "uncertain",
`total score of attitude` > 7 ~ "positive"
))
# Fit the logistic regression model with corrected column names and formula
glm_model <- glm(practice_level ~ Parents_age + Parents_sex +
Parents_education_level + Employment_status + Family_type +
Household_income_BDT + Childs_sex + Childs_age + Number_of_children +
knowledge_level + attitude_level,
family = binomial(link = "logit"), data = data)
colnames(data)
# Create practice level based on total practice score
data <- data |>
mutate(practice_level = case_when(
`total score of practice` < 4 ~ "poor",
`total score of practice` >= 4 ~ "good"
))
## Ensure practice_level is a factor with ordered levels
data$practice_level <- factor(data$practice_level,
levels = c("poor", "good"),
ordered = TRUE)
# Fit the logistic regression model with corrected column names and formula
glm_model <- glm(practice_level ~ Parents_age + Parents_sex +
Parents_education_level + Employment_status + Family_type +
Household_income_BDT + Childs_sex + Childs_age + Number_of_children +
knowledge_level + attitude_level,
family = binomial(link = "logit"), data = data)
# Fit the binary logistic regression model
glm_model <- glm(practice_level ~ `Parent’s age (years)` + `Parent’s sex` +
`Parent’s education level` + `Employment status` + `Family type` +
`Your average household income per month (BDT)` + `Child’s sex` +
`Child’s age (years)` + `Number of children` +
knowledge_level + attitude_level,
family = binomial(link = "logit"), data = data)
# Summarize the model
summary(glm_model)
report(glm_model)
#
glm_model |>
tbl_regression(exponentiate = TRUE)
#
glm_model |>
tbl_regression(exponentiate = TRUE) |>
bold_p(t = 0.05)
#
glm_model |>
tbl_regression(exponentiate = TRUE) |>
bold_p(t = 0.05) |>
as_gt()
#
glm_model |>
tbl_regression(exponentiate = TRUE) |>
bold_p(t = 0.05) |>
as_gt() |>
gtsave("tables/Table6_practice.docx")
# load packages
library(tidyverse)
library(gtsummary)
library(gt)
library(easystats)
# read data
data <- readxl::read_excel("rawdata/AMR_KAP_Data.xlsx", sheet = 1)
View(data)
select(41:49)
#major sources of information
data |>
select(41:49)
#major sources of information
data |>
select(41:49) |>
tbl_summary()
#major sources of information
data |>
select(41:49) |>
tbl_summary() |>
as_gt()
#major sources of information
data |>
select(41:49) |>
tbl_summary() |>
as_gt() |>
gtsave("tables/Table2_information.docx")
